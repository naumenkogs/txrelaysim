
random.seed 9098797865656766578567
network.size 1000
REACHABLE 100
RECONCILING_FRACTION 1

simulation.endtime 400 * 1000
simulation.logtime 50 * 1000
simulation.experiments 1

################### protocols ===========================
protocol.0 peersim.core.IdleProtocol

protocol.1 txrelaysim.src.Source
protocol.1.step 1000
protocol.1.transport urt

protocol.2 txrelaysim.src.Peer
protocol.2.step 100
protocol.2.transport urt

protocol.urt UniformRandomTransport
protocol.urt.mindelay 0
protocol.urt.maxdelay 300

################### initialization ======================
init.1 txrelaysim.src.SourceInitializer
init.1.protocol 1

init.2 txrelaysim.src.PeerInitializer
init.2.protocol 2

############### ERLAY #####################
# How many reachable nodes we have in the network (total nodes is above called `network.size`)
init.2.reachable_count REACHABLE

init.2.in_delay_legacy 5 * 1000
init.2.out_delay_legacy 2 * 1000

init.2.in_delay_erlay 2 * 1000
init.2.out_delay_erlay 1 * 1000

# Fraction of all nodes that support reconciliation
init.2.reconcile_count network.size * RECONCILING_FRACTION

# Intervals between reconciliations with a given peer (Alice reconciles with Bob every 8 seconds)
init.2.reconciliation_interval 1000

init.2.in_fanout_fraction_erlay 0.05
init.2.out_fanout_erlay 1

# Erlay coefficients
init.2.q 0.1
init.2.c 25

init.sch1 CDScheduler
init.sch1.protocol 1

init.sch2 CDScheduler
init.sch2.protocol 2

################ control ==============================

control.0 txrelaysim.src.InvObserver
control.0.protocol 2
control.0.step simulation.endtime - 1000
